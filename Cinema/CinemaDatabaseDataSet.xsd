<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CinemaDatabaseDataSet" targetNamespace="http://tempuri.org/CinemaDatabaseDataSet.xsd" xmlns:mstns="http://tempuri.org/CinemaDatabaseDataSet.xsd" xmlns="http://tempuri.org/CinemaDatabaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CinemaDatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CinemaDatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Cinema.Properties.Settings.GlobalReference.Default.CinemaDatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AuditoriumsTableAdapter" GeneratorDataComponentClassName="AuditoriumsTableAdapter" Name="Auditoriums" UserDataComponentName="AuditoriumsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.Auditoriums" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Auditoriums] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Auditoriums] ([id]) VALUES (@id);
SELECT id FROM Auditoriums WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id FROM dbo.Auditoriums</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Auditoriums] SET [id] = @id WHERE (([id] = @Original_id));
SELECT id FROM Auditoriums WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GenresTableAdapter" GeneratorDataComponentClassName="GenresTableAdapter" Name="Genres" UserDataComponentName="GenresTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.Genres" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Genres] WHERE (([id] = @Original_id) AND ([genre] = @Original_genre))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Genres] ([genre]) VALUES (@genre);
SELECT id, genre FROM Genres WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, genre FROM dbo.Genres</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Genres] SET [genre] = @genre WHERE (([id] = @Original_id) AND ([genre] = @Original_genre));
SELECT id, genre FROM Genres WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[C:\USERS\DANIEL\DESKTOP\GIT\SWPSD-PROJEKT\CINEMA\CINEMA\CINEMADATABASE.MDF].dbo.Genres" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="genre" DataSetColumn="genre" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MoviesTableAdapter" GeneratorDataComponentClassName="MoviesTableAdapter" Name="Movies" UserDataComponentName="MoviesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.Movies" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Movies] WHERE (([id] = @Original_id) AND ([title] = @Original_title))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Movies] ([title]) VALUES (@title);
SELECT id, title FROM Movies WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, title FROM dbo.Movies</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Movies] SET [title] = @title WHERE (([id] = @Original_id) AND ([title] = @Original_title));
SELECT id, title FROM Movies WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[C:\USERS\DANIEL\DESKTOP\GIT\SWPSD-PROJEKT\CINEMA\CINEMA\CINEMADATABASE.MDF].dbo.Movies" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="title" DataSetColumn="title" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PricesTableAdapter" GeneratorDataComponentClassName="PricesTableAdapter" Name="Prices" UserDataComponentName="PricesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.Prices" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Prices] WHERE (([id] = @Original_id) AND ([price] = @Original_price) AND ((@IsNull_priceDescription = 1 AND [priceDescription] IS NULL) OR ([priceDescription] = @Original_priceDescription)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_priceDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="priceDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_priceDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="priceDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Prices] ([price], [priceDescription]) VALUES (@price, @priceDescription);
SELECT id, price, priceDescription FROM Prices WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@priceDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="priceDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, price, priceDescription FROM dbo.Prices</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Prices] SET [price] = @price, [priceDescription] = @priceDescription WHERE (([id] = @Original_id) AND ([price] = @Original_price) AND ((@IsNull_priceDescription = 1 AND [priceDescription] IS NULL) OR ([priceDescription] = @Original_priceDescription)));
SELECT id, price, priceDescription FROM Prices WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@priceDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="priceDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_priceDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="priceDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_priceDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="priceDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[C:\USERS\DANIEL\DESKTOP\GIT\SWPSD-PROJEKT\CINEMA\CINEMA\CINEMADATABASE.MDF].dbo.Prices" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="priceDescription" DataSetColumn="priceDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ScreeningsTableAdapter" GeneratorDataComponentClassName="ScreeningsTableAdapter" Name="Screenings" UserDataComponentName="ScreeningsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.Screenings" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Screenings] WHERE (([id] = @Original_id) AND ([auditoriumID] = @Original_auditoriumID) AND ([movieID] = @Original_movieID) AND ([screeningDate] = @Original_screeningDate) AND ([screeningTime] = @Original_screeningTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_auditoriumID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="auditoriumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_screeningDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="screeningDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Original_screeningTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="screeningTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Screenings] ([auditoriumID], [movieID], [screeningDate], [screeningTime]) VALUES (@auditoriumID, @movieID, @screeningDate, @screeningTime);
SELECT id, auditoriumID, movieID, screeningDate, screeningTime FROM Screenings WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@auditoriumID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="auditoriumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@screeningDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="screeningDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@screeningTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="screeningTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, auditoriumID, movieID, screeningDate, screeningTime FROM dbo.Screenings</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Screenings] SET [auditoriumID] = @auditoriumID, [movieID] = @movieID, [screeningDate] = @screeningDate, [screeningTime] = @screeningTime WHERE (([id] = @Original_id) AND ([auditoriumID] = @Original_auditoriumID) AND ([movieID] = @Original_movieID) AND ([screeningDate] = @Original_screeningDate) AND ([screeningTime] = @Original_screeningTime));
SELECT id, auditoriumID, movieID, screeningDate, screeningTime FROM Screenings WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@auditoriumID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="auditoriumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@screeningDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="screeningDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@screeningTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="screeningTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_auditoriumID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="auditoriumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_screeningDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="screeningDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Time" Direction="Input" ParameterName="@Original_screeningTime" Precision="0" ProviderType="Time" Scale="0" Size="0" SourceColumn="screeningTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[C:\USERS\DANIEL\DESKTOP\GIT\SWPSD-PROJEKT\CINEMA\CINEMA\CINEMADATABASE.MDF].dbo.Screenings" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="auditoriumID" DataSetColumn="auditoriumID" />
              <Mapping SourceColumn="movieID" DataSetColumn="movieID" />
              <Mapping SourceColumn="screeningDate" DataSetColumn="screeningDate" />
              <Mapping SourceColumn="screeningTime" DataSetColumn="screeningTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SeatsTableAdapter" GeneratorDataComponentClassName="SeatsTableAdapter" Name="Seats" UserDataComponentName="SeatsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.Seats" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Seats] WHERE (([id] = @Original_id) AND ([auditoriumID] = @Original_auditoriumID) AND ([rowNo] = @Original_rowNo) AND ([seatNo] = @Original_seatNo))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_auditoriumID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="auditoriumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rowNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rowNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Seats] ([auditoriumID], [rowNo], [seatNo]) VALUES (@auditoriumID, @rowNo, @seatNo);
SELECT id, auditoriumID, rowNo, seatNo FROM Seats WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@auditoriumID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="auditoriumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@rowNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rowNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, auditoriumID, rowNo, seatNo FROM dbo.Seats</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Seats] SET [auditoriumID] = @auditoriumID, [rowNo] = @rowNo, [seatNo] = @seatNo WHERE (([id] = @Original_id) AND ([auditoriumID] = @Original_auditoriumID) AND ([rowNo] = @Original_rowNo) AND ([seatNo] = @Original_seatNo));
SELECT id, auditoriumID, rowNo, seatNo FROM Seats WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@auditoriumID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="auditoriumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@rowNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rowNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_auditoriumID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="auditoriumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rowNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rowNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[C:\USERS\DANIEL\DESKTOP\GIT\SWPSD-PROJEKT\CINEMA\CINEMA\CINEMADATABASE.MDF].dbo.Seats" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="auditoriumID" DataSetColumn="auditoriumID" />
              <Mapping SourceColumn="rowNo" DataSetColumn="rowNo" />
              <Mapping SourceColumn="seatNo" DataSetColumn="seatNo" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TagsTableAdapter" GeneratorDataComponentClassName="TagsTableAdapter" Name="Tags" UserDataComponentName="TagsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.Tags" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tags] WHERE (([movieID] = @Original_movieID) AND ([genreID] = @Original_genreID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genreID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tags] ([movieID], [genreID]) VALUES (@movieID, @genreID);
SELECT movieID, genreID FROM Tags WHERE (genreID = @genreID) AND (movieID = @movieID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@genreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genreID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT movieID, genreID FROM dbo.Tags</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tags] SET [movieID] = @movieID, [genreID] = @genreID WHERE (([movieID] = @Original_movieID) AND ([genreID] = @Original_genreID));
SELECT movieID, genreID FROM Tags WHERE (genreID = @genreID) AND (movieID = @movieID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@genreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genreID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genreID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="movieID" DataSetColumn="movieID" />
              <Mapping SourceColumn="genreID" DataSetColumn="genreID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TicketsTableAdapter" GeneratorDataComponentClassName="TicketsTableAdapter" Name="Tickets" UserDataComponentName="TicketsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.Tickets" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tickets] WHERE (([id] = @Original_id) AND ([seatID] = @Original_seatID) AND ([screeningID] = @Original_screeningID) AND ([priceID] = @Original_priceID) AND ([bookerName] = @Original_bookerName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seatID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_screeningID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="screeningID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_priceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="priceID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_bookerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tickets] ([seatID], [screeningID], [priceID], [bookerName]) VALUES (@seatID, @screeningID, @priceID, @bookerName);
SELECT id, seatID, screeningID, priceID, bookerName FROM Tickets WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seatID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@screeningID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="screeningID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@priceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="priceID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@bookerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, seatID, screeningID, priceID, bookerName FROM dbo.Tickets</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tickets] SET [seatID] = @seatID, [screeningID] = @screeningID, [priceID] = @priceID, [bookerName] = @bookerName WHERE (([id] = @Original_id) AND ([seatID] = @Original_seatID) AND ([screeningID] = @Original_screeningID) AND ([priceID] = @Original_priceID) AND ([bookerName] = @Original_bookerName));
SELECT id, seatID, screeningID, priceID, bookerName FROM Tickets WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seatID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@screeningID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="screeningID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@priceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="priceID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@bookerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seatID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_screeningID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="screeningID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_priceID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="priceID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_bookerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[C:\USERS\DANIEL\DESKTOP\GIT\SWPSD-PROJEKT\CINEMA\CINEMA\CINEMADATABASE.MDF].dbo.Tickets" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="seatID" DataSetColumn="seatID" />
              <Mapping SourceColumn="screeningID" DataSetColumn="screeningID" />
              <Mapping SourceColumn="priceID" DataSetColumn="priceID" />
              <Mapping SourceColumn="bookerName" DataSetColumn="bookerName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="getMoviesByGenreTableAdapter" GeneratorDataComponentClassName="getMoviesByGenreTableAdapter" Name="getMoviesByGenre" UserDataComponentName="getMoviesByGenreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.getMoviesByGenre" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.getMoviesByGenre</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@genreID" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="title" DataSetColumn="title" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="getScreeningsTableAdapter" GeneratorDataComponentClassName="getScreeningsTableAdapter" Name="getScreenings" UserDataComponentName="getScreeningsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CinemaDatabaseConnectionString (Settings)" DbObjectName="dbo.getScreenings" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.getScreenings</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="date" DbType="Date" Direction="Input" ParameterName="@screeningDate" Precision="10" ProviderType="Date" Scale="0" Size="3" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="time" DbType="Time" Direction="Input" ParameterName="@screeningTime" Precision="16" ProviderType="Time" Scale="7" Size="5" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@hoursOffset" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="title" DataSetColumn="title" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="screeningDate" DataSetColumn="screeningDate" />
              <Mapping SourceColumn="screeningTime" DataSetColumn="screeningTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CinemaDatabaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="CinemaDatabaseDataSet" msprop:Generator_UserDSName="CinemaDatabaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Auditoriums" msprop:Generator_TableClassName="AuditoriumsDataTable" msprop:Generator_TableVarName="tableAuditoriums" msprop:Generator_TablePropName="Auditoriums" msprop:Generator_RowDeletingName="AuditoriumsRowDeleting" msprop:Generator_RowChangingName="AuditoriumsRowChanging" msprop:Generator_RowEvHandlerName="AuditoriumsRowChangeEventHandler" msprop:Generator_RowDeletedName="AuditoriumsRowDeleted" msprop:Generator_UserTableName="Auditoriums" msprop:Generator_RowChangedName="AuditoriumsRowChanged" msprop:Generator_RowEvArgName="AuditoriumsRowChangeEvent" msprop:Generator_RowClassName="AuditoriumsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Genres" msprop:Generator_TableClassName="GenresDataTable" msprop:Generator_TableVarName="tableGenres" msprop:Generator_TablePropName="Genres" msprop:Generator_RowDeletingName="GenresRowDeleting" msprop:Generator_RowChangingName="GenresRowChanging" msprop:Generator_RowEvHandlerName="GenresRowChangeEventHandler" msprop:Generator_RowDeletedName="GenresRowDeleted" msprop:Generator_UserTableName="Genres" msprop:Generator_RowChangedName="GenresRowChanged" msprop:Generator_RowEvArgName="GenresRowChangeEvent" msprop:Generator_RowClassName="GenresRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="genre" msprop:Generator_ColumnVarNameInTable="columngenre" msprop:Generator_ColumnPropNameInRow="genre" msprop:Generator_ColumnPropNameInTable="genreColumn" msprop:Generator_UserColumnName="genre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Movies" msprop:Generator_TableClassName="MoviesDataTable" msprop:Generator_TableVarName="tableMovies" msprop:Generator_TablePropName="Movies" msprop:Generator_RowDeletingName="MoviesRowDeleting" msprop:Generator_RowChangingName="MoviesRowChanging" msprop:Generator_RowEvHandlerName="MoviesRowChangeEventHandler" msprop:Generator_RowDeletedName="MoviesRowDeleted" msprop:Generator_UserTableName="Movies" msprop:Generator_RowChangedName="MoviesRowChanged" msprop:Generator_RowEvArgName="MoviesRowChangeEvent" msprop:Generator_RowClassName="MoviesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="title" msprop:Generator_ColumnVarNameInTable="columntitle" msprop:Generator_ColumnPropNameInRow="title" msprop:Generator_ColumnPropNameInTable="titleColumn" msprop:Generator_UserColumnName="title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Prices" msprop:Generator_TableClassName="PricesDataTable" msprop:Generator_TableVarName="tablePrices" msprop:Generator_TablePropName="Prices" msprop:Generator_RowDeletingName="PricesRowDeleting" msprop:Generator_RowChangingName="PricesRowChanging" msprop:Generator_RowEvHandlerName="PricesRowChangeEventHandler" msprop:Generator_RowDeletedName="PricesRowDeleted" msprop:Generator_UserTableName="Prices" msprop:Generator_RowChangedName="PricesRowChanged" msprop:Generator_RowEvArgName="PricesRowChangeEvent" msprop:Generator_RowClassName="PricesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:double" />
              <xs:element name="priceDescription" msprop:Generator_ColumnVarNameInTable="columnpriceDescription" msprop:Generator_ColumnPropNameInRow="priceDescription" msprop:Generator_ColumnPropNameInTable="priceDescriptionColumn" msprop:Generator_UserColumnName="priceDescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Screenings" msprop:Generator_TableClassName="ScreeningsDataTable" msprop:Generator_TableVarName="tableScreenings" msprop:Generator_TablePropName="Screenings" msprop:Generator_RowDeletingName="ScreeningsRowDeleting" msprop:Generator_RowChangingName="ScreeningsRowChanging" msprop:Generator_RowEvHandlerName="ScreeningsRowChangeEventHandler" msprop:Generator_RowDeletedName="ScreeningsRowDeleted" msprop:Generator_UserTableName="Screenings" msprop:Generator_RowChangedName="ScreeningsRowChanged" msprop:Generator_RowEvArgName="ScreeningsRowChangeEvent" msprop:Generator_RowClassName="ScreeningsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="auditoriumID" msprop:Generator_ColumnVarNameInTable="columnauditoriumID" msprop:Generator_ColumnPropNameInRow="auditoriumID" msprop:Generator_ColumnPropNameInTable="auditoriumIDColumn" msprop:Generator_UserColumnName="auditoriumID" type="xs:int" />
              <xs:element name="movieID" msprop:Generator_ColumnVarNameInTable="columnmovieID" msprop:Generator_ColumnPropNameInRow="movieID" msprop:Generator_ColumnPropNameInTable="movieIDColumn" msprop:Generator_UserColumnName="movieID" type="xs:int" />
              <xs:element name="screeningDate" msprop:Generator_ColumnVarNameInTable="columnscreeningDate" msprop:Generator_ColumnPropNameInRow="screeningDate" msprop:Generator_ColumnPropNameInTable="screeningDateColumn" msprop:Generator_UserColumnName="screeningDate" type="xs:dateTime" />
              <xs:element name="screeningTime" msprop:Generator_ColumnVarNameInTable="columnscreeningTime" msprop:Generator_ColumnPropNameInRow="screeningTime" msprop:Generator_ColumnPropNameInTable="screeningTimeColumn" msprop:Generator_UserColumnName="screeningTime" type="xs:duration" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Seats" msprop:Generator_TableClassName="SeatsDataTable" msprop:Generator_TableVarName="tableSeats" msprop:Generator_TablePropName="Seats" msprop:Generator_RowDeletingName="SeatsRowDeleting" msprop:Generator_RowChangingName="SeatsRowChanging" msprop:Generator_RowEvHandlerName="SeatsRowChangeEventHandler" msprop:Generator_RowDeletedName="SeatsRowDeleted" msprop:Generator_UserTableName="Seats" msprop:Generator_RowChangedName="SeatsRowChanged" msprop:Generator_RowEvArgName="SeatsRowChangeEvent" msprop:Generator_RowClassName="SeatsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="auditoriumID" msprop:Generator_ColumnVarNameInTable="columnauditoriumID" msprop:Generator_ColumnPropNameInRow="auditoriumID" msprop:Generator_ColumnPropNameInTable="auditoriumIDColumn" msprop:Generator_UserColumnName="auditoriumID" type="xs:int" />
              <xs:element name="rowNo" msprop:Generator_ColumnVarNameInTable="columnrowNo" msprop:Generator_ColumnPropNameInRow="rowNo" msprop:Generator_ColumnPropNameInTable="rowNoColumn" msprop:Generator_UserColumnName="rowNo" type="xs:int" />
              <xs:element name="seatNo" msprop:Generator_ColumnVarNameInTable="columnseatNo" msprop:Generator_ColumnPropNameInRow="seatNo" msprop:Generator_ColumnPropNameInTable="seatNoColumn" msprop:Generator_UserColumnName="seatNo" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tags" msprop:Generator_TableClassName="TagsDataTable" msprop:Generator_TableVarName="tableTags" msprop:Generator_TablePropName="Tags" msprop:Generator_RowDeletingName="TagsRowDeleting" msprop:Generator_RowChangingName="TagsRowChanging" msprop:Generator_RowEvHandlerName="TagsRowChangeEventHandler" msprop:Generator_RowDeletedName="TagsRowDeleted" msprop:Generator_UserTableName="Tags" msprop:Generator_RowChangedName="TagsRowChanged" msprop:Generator_RowEvArgName="TagsRowChangeEvent" msprop:Generator_RowClassName="TagsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="movieID" msprop:Generator_ColumnVarNameInTable="columnmovieID" msprop:Generator_ColumnPropNameInRow="movieID" msprop:Generator_ColumnPropNameInTable="movieIDColumn" msprop:Generator_UserColumnName="movieID" type="xs:int" />
              <xs:element name="genreID" msprop:Generator_ColumnVarNameInTable="columngenreID" msprop:Generator_ColumnPropNameInRow="genreID" msprop:Generator_ColumnPropNameInTable="genreIDColumn" msprop:Generator_UserColumnName="genreID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tickets" msprop:Generator_TableClassName="TicketsDataTable" msprop:Generator_TableVarName="tableTickets" msprop:Generator_TablePropName="Tickets" msprop:Generator_RowDeletingName="TicketsRowDeleting" msprop:Generator_RowChangingName="TicketsRowChanging" msprop:Generator_RowEvHandlerName="TicketsRowChangeEventHandler" msprop:Generator_RowDeletedName="TicketsRowDeleted" msprop:Generator_UserTableName="Tickets" msprop:Generator_RowChangedName="TicketsRowChanged" msprop:Generator_RowEvArgName="TicketsRowChangeEvent" msprop:Generator_RowClassName="TicketsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="seatID" msprop:Generator_ColumnVarNameInTable="columnseatID" msprop:Generator_ColumnPropNameInRow="seatID" msprop:Generator_ColumnPropNameInTable="seatIDColumn" msprop:Generator_UserColumnName="seatID" type="xs:int" />
              <xs:element name="screeningID" msprop:Generator_ColumnVarNameInTable="columnscreeningID" msprop:Generator_ColumnPropNameInRow="screeningID" msprop:Generator_ColumnPropNameInTable="screeningIDColumn" msprop:Generator_UserColumnName="screeningID" type="xs:int" />
              <xs:element name="priceID" msprop:Generator_ColumnVarNameInTable="columnpriceID" msprop:Generator_ColumnPropNameInRow="priceID" msprop:Generator_ColumnPropNameInTable="priceIDColumn" msprop:Generator_UserColumnName="priceID" type="xs:int" />
              <xs:element name="bookerName" msprop:Generator_ColumnVarNameInTable="columnbookerName" msprop:Generator_ColumnPropNameInRow="bookerName" msprop:Generator_ColumnPropNameInTable="bookerNameColumn" msprop:Generator_UserColumnName="bookerName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="getMoviesByGenre" msprop:Generator_TableClassName="getMoviesByGenreDataTable" msprop:Generator_TableVarName="tablegetMoviesByGenre" msprop:Generator_TablePropName="getMoviesByGenre" msprop:Generator_RowDeletingName="getMoviesByGenreRowDeleting" msprop:Generator_RowChangingName="getMoviesByGenreRowChanging" msprop:Generator_RowEvHandlerName="getMoviesByGenreRowChangeEventHandler" msprop:Generator_RowDeletedName="getMoviesByGenreRowDeleted" msprop:Generator_UserTableName="getMoviesByGenre" msprop:Generator_RowChangedName="getMoviesByGenreRowChanged" msprop:Generator_RowEvArgName="getMoviesByGenreRowChangeEvent" msprop:Generator_RowClassName="getMoviesByGenreRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="title" msprop:Generator_ColumnVarNameInTable="columntitle" msprop:Generator_ColumnPropNameInRow="title" msprop:Generator_ColumnPropNameInTable="titleColumn" msprop:Generator_UserColumnName="title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="getScreenings" msprop:Generator_TableClassName="getScreeningsDataTable" msprop:Generator_TableVarName="tablegetScreenings" msprop:Generator_TablePropName="getScreenings" msprop:Generator_RowDeletingName="getScreeningsRowDeleting" msprop:Generator_RowChangingName="getScreeningsRowChanging" msprop:Generator_RowEvHandlerName="getScreeningsRowChangeEventHandler" msprop:Generator_RowDeletedName="getScreeningsRowDeleted" msprop:Generator_UserTableName="getScreenings" msprop:Generator_RowChangedName="getScreeningsRowChanged" msprop:Generator_RowEvArgName="getScreeningsRowChangeEvent" msprop:Generator_RowClassName="getScreeningsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="title" msprop:Generator_ColumnVarNameInTable="columntitle" msprop:Generator_ColumnPropNameInRow="title" msprop:Generator_ColumnPropNameInTable="titleColumn" msprop:Generator_UserColumnName="title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="screeningDate" msprop:Generator_ColumnVarNameInTable="columnscreeningDate" msprop:Generator_ColumnPropNameInRow="screeningDate" msprop:Generator_ColumnPropNameInTable="screeningDateColumn" msprop:Generator_UserColumnName="screeningDate" type="xs:dateTime" />
              <xs:element name="screeningTime" msprop:Generator_ColumnVarNameInTable="columnscreeningTime" msprop:Generator_ColumnPropNameInRow="screeningTime" msprop:Generator_ColumnPropNameInTable="screeningTimeColumn" msprop:Generator_UserColumnName="screeningTime" type="xs:duration" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Auditoriums" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Genres_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Genres" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Movies_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Movies" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Prices_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Prices" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Screenings_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Screenings" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Seats_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Seats" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Tags_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tags" />
      <xs:field xpath="mstns:movieID" />
      <xs:field xpath="mstns:genreID" />
    </xs:unique>
    <xs:unique name="Tickets_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tickets" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="getScreenings_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:getScreenings" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Screening__audit__5F7E2DAC" msdata:parent="Auditoriums" msdata:child="Screenings" msdata:parentkey="id" msdata:childkey="auditoriumID" msprop:Generator_UserChildTable="Screenings" msprop:Generator_ChildPropName="GetScreeningsRows" msprop:Generator_UserRelationName="FK__Screening__audit__5F7E2DAC" msprop:Generator_ParentPropName="AuditoriumsRow" msprop:Generator_RelationVarName="relationFK__Screening__audit__5F7E2DAC" msprop:Generator_UserParentTable="Auditoriums" />
      <msdata:Relationship name="FK__Screening__movie__607251E5" msdata:parent="Movies" msdata:child="Screenings" msdata:parentkey="id" msdata:childkey="movieID" msprop:Generator_UserChildTable="Screenings" msprop:Generator_ChildPropName="GetScreeningsRows" msprop:Generator_UserRelationName="FK__Screening__movie__607251E5" msprop:Generator_ParentPropName="MoviesRow" msprop:Generator_RelationVarName="relationFK__Screening__movie__607251E5" msprop:Generator_UserParentTable="Movies" />
      <msdata:Relationship name="FK__Seats__auditoriu__5CA1C101" msdata:parent="Auditoriums" msdata:child="Seats" msdata:parentkey="id" msdata:childkey="auditoriumID" msprop:Generator_UserChildTable="Seats" msprop:Generator_ChildPropName="GetSeatsRows" msprop:Generator_UserRelationName="FK__Seats__auditoriu__5CA1C101" msprop:Generator_ParentPropName="AuditoriumsRow" msprop:Generator_RelationVarName="relationFK__Seats__auditoriu__5CA1C101" msprop:Generator_UserParentTable="Auditoriums" />
      <msdata:Relationship name="FK__Tags__genreID__57DD0BE4" msdata:parent="Genres" msdata:child="Tags" msdata:parentkey="id" msdata:childkey="genreID" msprop:Generator_UserChildTable="Tags" msprop:Generator_ChildPropName="GetTagsRows" msprop:Generator_UserRelationName="FK__Tags__genreID__57DD0BE4" msprop:Generator_ParentPropName="GenresRow" msprop:Generator_RelationVarName="relationFK__Tags__genreID__57DD0BE4" msprop:Generator_UserParentTable="Genres" />
      <msdata:Relationship name="FK__Tags__movieID__56E8E7AB" msdata:parent="Movies" msdata:child="Tags" msdata:parentkey="id" msdata:childkey="movieID" msprop:Generator_UserChildTable="Tags" msprop:Generator_ChildPropName="GetTagsRows" msprop:Generator_UserRelationName="FK__Tags__movieID__56E8E7AB" msprop:Generator_ParentPropName="MoviesRow" msprop:Generator_RelationVarName="relationFK__Tags__movieID__56E8E7AB" msprop:Generator_UserParentTable="Movies" />
      <msdata:Relationship name="FK__Tickets__priceID__671F4F74" msdata:parent="Prices" msdata:child="Tickets" msdata:parentkey="id" msdata:childkey="priceID" msprop:Generator_UserChildTable="Tickets" msprop:Generator_ChildPropName="GetTicketsRows" msprop:Generator_UserRelationName="FK__Tickets__priceID__671F4F74" msprop:Generator_ParentPropName="PricesRow" msprop:Generator_RelationVarName="relationFK__Tickets__priceID__671F4F74" msprop:Generator_UserParentTable="Prices" />
      <msdata:Relationship name="FK__Tickets__screeni__662B2B3B" msdata:parent="Screenings" msdata:child="Tickets" msdata:parentkey="id" msdata:childkey="screeningID" msprop:Generator_UserChildTable="Tickets" msprop:Generator_ChildPropName="GetTicketsRows" msprop:Generator_UserRelationName="FK__Tickets__screeni__662B2B3B" msprop:Generator_ParentPropName="ScreeningsRow" msprop:Generator_RelationVarName="relationFK__Tickets__screeni__662B2B3B" msprop:Generator_UserParentTable="Screenings" />
      <msdata:Relationship name="FK__Tickets__seatID__65370702" msdata:parent="Seats" msdata:child="Tickets" msdata:parentkey="id" msdata:childkey="seatID" msprop:Generator_UserChildTable="Tickets" msprop:Generator_ChildPropName="GetTicketsRows" msprop:Generator_UserRelationName="FK__Tickets__seatID__65370702" msprop:Generator_ParentPropName="SeatsRow" msprop:Generator_RelationVarName="relationFK__Tickets__seatID__65370702" msprop:Generator_UserParentTable="Seats" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>